{
    "tests": [
        {
            "traceback": "AssertionError: Your blend function failed test case 0.  Your submission did not match the expected result within the comparison tolerance for the function.\n\nYou should test that your code works on laplacian pyramids from images with both even or odd shape, and with an even or odd number of layers. (The number of layers will never exceed `log2(min(img.shape))` )\n",
            "err_msg": "You should test that your code works on laplacian pyramids from images with both even or odd shape, and with an even or odd number of layers. (The number of layers will never exceed `log2(min(img.shape))` )",
            "output": {
                "points_available": 10,
                "points_awarded": 5
            },
            "description": "Grade for blend"
        },
        {
            "traceback": "AssertionError: Your collapse function failed test case 0.  Your submission did not match the expected result within the comparison tolerance for the function.\n\nYou should test that your code works on inputs from images with both even or odd shape, and with an even or odd number of layers. (The number of layers will never exceed `log2(min(img.shape))` )\n",
            "err_msg": "You should test that your code works on inputs from images with both even or odd shape, and with an even or odd number of layers. (The number of layers will never exceed `log2(min(img.shape))` )",
            "output": {
                "points_available": 10,
                "points_awarded": 5
            },
            "description": "Grade for collapse"
        },
        {
            "traceback": "AssertionError: Your laplPyramid function failed test case 0.  Your submission did not match the expected result within the comparison tolerance for the function.\n\nYou should test that your code works on gaussian pyramids from images with both even or odd shape, and with an even or odd number of layers. (The number of layers will never exceed `log2(min(img.shape))` )\n",
            "err_msg": "You should test that your code works on gaussian pyramids from images with both even or odd shape, and with an even or odd number of layers. (The number of layers will never exceed `log2(min(img.shape))` )",
            "output": {
                "points_available": 10,
                "points_awarded": 5
            },
            "description": "Grade for laplPyramid"
        },
        {
            "traceback": "AssertionError: Your reduce_layer function failed test case 0.  Your submission did not match the expected result within the comparison tolerance for the function.\n\nYou should test that your code works on input images with both even or odd shape with generating kernels using any parameter value between 0 < a <= 0.5, and that you are using the correct border condition.\n",
            "err_msg": "You should test that your code works on input images with both even or odd shape with generating kernels using any parameter value between 0 < a <= 0.5, and that you are using the correct border condition.",
            "output": {
                "points_available": 5,
                "points_awarded": 3
            },
            "description": "Grade for reduce_layer"
        },
        {
            "traceback": "",
            "err_msg": null,
            "output": {
                "points_available": 5,
                "points_awarded": 5
            },
            "description": "Grade for expand_layer"
        },
        {
            "traceback": "",
            "err_msg": null,
            "output": {
                "points_available": 10,
                "points_awarded": 10
            },
            "description": "Grade for gaussPyramid"
        }
    ],
    "total_points_available": 50,
    "total_points_awarded": 33
}